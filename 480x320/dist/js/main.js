!function(g){function I(t){if(C[t])return C[t].exports;var n=C[t]={i:t,l:!1,exports:{}};return g[t].call(n.exports,n,n.exports,I),n.l=!0,n.exports}var C={};I.m=g,I.c=C,I.i=function(g){return g},I.d=function(g,C,t){I.o(g,C)||Object.defineProperty(g,C,{configurable:!1,enumerable:!0,get:t})},I.n=function(g){var C=g&&g.__esModule?function(){return g.default}:function(){return g};return I.d(C,"a",C),C},I.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},I.p="",I(I.s=4)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n\n\nvar _mobile = __webpack_require__(3);\n\nvar _mobile2 = _interopRequireDefault(_mobile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Video = function () {\n    function Video(options) {\n        _classCallCheck(this, Video);\n\n        this.init(options);\n    }\n\n    _createClass(Video, [{\n        key: 'init',\n        value: function init(options) {\n            var _this = this;\n\n            /* currently the content is pass in as jquery object, and need to change to javascript object */\n            this.content = document.querySelector(options.selector);\n            this.data = options.data;\n            this.id = options.id;\n\n            this.preview = options.preview;\n            this.app = options.app;\n            this.callbackEvents = options.events;\n\n            this.pauseVideo = function () {\n                _this.video.pause();\n            };\n            this.playVideo = function () {\n                _this.video.play();\n            };\n            this.getCurrentTime = function () {\n                return _this.video.currentTime;\n            };\n            this.getDuration = function () {\n                return _this.video.duration;\n            };\n\n            this.quality = 'low';\n\n            if (typeof options.quality != 'undefined') {\n                this.quality = options.quality;\n            }\n\n            /* variable which need to be manipulated for freeflow */\n            this.videoContainer = document.getElementById('video-container-' + this.id);\n            this.video = this.videoContainer.querySelector('#video');\n            this.videoState = 0; //0 - unplayed, 1 - playing, 2 - pause. 3 - ended\n            this.endingImage = document.getElementById('ending-image-' + this.id);\n            this.autoplay = parseInt(this.data.autoplay); // 0 - none, 1 - autoplay, 2 - inview\n            this.clickthrough = document.getElementById('clickthrough-container-' + this.id);\n            this.replayBtn = document.getElementById('control-replay-' + this.id);\n            this.clickable = document.getElementById('hosted-video-clickable-area-' + this.id) || document.createElement('div');\n            this.playTimeTracking = function () {};\n\n            this.control = {\n                audio: document.getElementById('default-control-audio-container-' + this.id),\n                play: document.getElementById('default-control-play-container-' + this.id),\n                replay: document.getElementById('default-control-replay-container-' + this.id)\n            };\n            this.overlay = this.videoContainer.querySelector('.overlay');\n\n            this.timerInterval;\n            this.tracked = [];\n            this.videos_chunks = [];\n            this.hoverEvent = false;\n\n            this.canvasVideo = false;\n            this.canvasVideoSwitched = false;\n\n            /* TEMPORARY animation delay */\n            if (this.autoplay != 0) {\n                if (this.app.isMobile() && this.autoplay == 1) {\n                    this.autoplay = 2; //animating play is same as inview play\n                } else if (this.autoplay == 2) {\n                    if (this.video != null) {\n                        this.video.removeAttribute('autoplay');\n                    }\n                }\n            }\n\n            /* html5 */\n            if (this.app.isMobile() && this.autoplay != 0) {\n\n                if (this.video != null) {\n                    /* hide the html video */\n                    this.video.style.display = 'none';\n                    /* render mobile video */\n                    this.mobile();\n                    // this.mobile({\n                    //     'callback' : () =>  {\n                    //         var desktopVideo = this.videoContainer.querySelector('video') || this.videoContainer.querySelector('canvas');\n                    //         desktopVideo.parentNode.appendChild(this.video);\n                    //         this.events();\n\n                    //         /* create mute unmute function for desktop video */\n                    //         this.video.mute = () =>  {video.muted = true;};\n                    //         this.video.unmute = () =>  {video.muted = false;};\n                    //     }\n                    // });\n                } else {\n                    this.video = this.videoContainer.querySelector('canvas');\n                }\n\n                this.canvasVideo = true;\n            } else {\n                this.loadVideo();\n            }\n\n            /* create mute unmute function for desktop video */\n            this.video.mute = function () {\n                video.muted = true;\n            };\n            this.video.unmute = function () {\n                video.muted = false;\n            };\n\n            if (this.app.isMobile() && this.autoplay != 0) {\n                //this.video.style.display = 'none';\n            } else {\n                this.events();\n            }\n\n            if (this.autoplay == 1) {\n                this.video.play();\n            }\n        }\n    }, {\n        key: 'loadVideo',\n        value: function loadVideo() {\n            var mp4 = document.createElement('source');\n            mp4.src = this.data.src.mp4.replace('.mp4', '_' + this.quality + '.mp4');\n            var webm = document.createElement('source');\n            webm.src = this.data.src.mp4.replace('.webm', '_' + this.quality + '.webm');\n            var ogg = document.createElement('source');\n            ogg.src = this.data.src.mp4.replace('.ogg', '_' + this.quality + '.ogg');\n\n            mp4.onerror = this.retarget.bind(this);\n\n            this.video.appendChild(mp4);\n            this.video.appendChild(webm);\n            this.video.appendChild(ogg);\n        }\n    }, {\n        key: 'retarget',\n        value: function retarget(e) {\n            /* insert the video source for desktop video */\n            this.video.innerHTML = '<source src=\"' + this.data.src.mp4 + '\" type=\"video/mp4\" onerror=\"console.log(this);this.retarget(this)\"/>\\\r\n            <source src=\"' + this.data.src.webm + '\" type=\"video/webm\" onerror=\"this.retarget(this)\"/>\\\r\n            <source src=\"' + this.data.src.ogg + '\" type=\"video/ogg\" onerror=\"this.retarget(this)\"/>';\n        }\n\n        /* Method to be used from controller */\n\n    }, {\n        key: 'playVideo',\n        value: function playVideo() {\n            this.video.play();\n        }\n    }, {\n        key: 'events',\n        value: function events() {\n            var _this2 = this;\n\n            /* set some important styling - NJ */\n            if (this.endingImage != null) {\n                this.endingImage.style.display = 'none';\n            }\n\n            /* clickthrough */\n            this.eventsClickthrough();\n            /* control */\n            this.eventsControl();\n\n            /**/\n            if (this.autoplay == 2) {\n                if (!this.preview) {\n                    /* register inview and outview here */\n                } else {\n                    this.video.play();\n                }\n            }\n\n            this.video.addEventListener('play', function () {\n\n                if (typeof _this2.videos_chunks != 'undefined') {\n                    while (_this2.videos_chunks.length != 0 && !_this2.canvasVideoSwitched) {\n\n                        _this2.loadJSON(_this2.videos_chunks.shift(), function (response) {\n                            var actual_JSON = JSON.parse(response);\n                            _this2.images_list[actual_JSON['index']] = actual_JSON['c'];\n                            if (typeof _this2.video.updateImagesUrl != 'undefined') {\n                                _this2.video.updateImagesUrl(_this2.images_list);\n                            }\n                        });\n                    }\n                }\n\n                /* update video state */\n                _this2.videoState = 1;\n                /* tracker */\n                _this2.tracker({\n                    type: 'video_play',\n                    tt: ''\n                });\n\n                _this2.playTimeTracking = setInterval(function () {\n                    _this2.trackPlayTime();\n                }, 500);\n            });\n            this.video.addEventListener('pause', function () {\n\n                /* video end will trigger pause event, so will need to check the time */\n                if (_this2.video.currentTime < _this2.video.duration) {\n                    /* update video state */\n                    _this2.videoState = 2;\n\n                    /* tracker */\n                    _this2.tracker({\n                        type: 'video_pause'\n                    });\n                }\n            });\n\n            this.video.addEventListener('ended', function () {\n                /* update video state */\n                _this2.videoState = 3;\n                /* tracker */\n                _this2.tracker({\n                    type: 'video_play_100',\n                    tt: ''\n                });\n                /* ending image */\n                _this2.eventsEndingImage();\n                /* stop play time tracking */\n                clearInterval(_this2.playTimeTracking);\n\n                /* video loop - NJ */\n                if (typeof _this2.data.loop != 'undefined' && _this2.data.loop) {\n                    _this2.play();\n                    /* hide replay */\n                    _this2.control.replay.querySelector('.dc-replay').style.display = 'none';\n                    _this2.control.play.querySelector('.dc-play').style.display = 'none';\n                    _this2.control.play.querySelector('.dc-pause').style.display = 'block';\n                }\n            });\n\n            /* listen to post message */\n            this.app.listen({\n                callback: function callback(resp) {\n                    if (typeof resp.auth == 'undefined') {\n                        return false;\n                    }\n                    /* inview */\n                    if (resp.auth.type == 'inview' && _this2.autoplay == 2) {\n                        if (!_this2.video.ended) {\n                            _this2.video.play();\n                        }\n                    }\n\n                    /* outview */\n                    if (resp.auth.type == 'outview' && _this2.autoplay == 2) {\n                        _this2.video.pause();\n                    }\n\n                    /* close exp */\n                    if (resp.auth.type == 'closeExpandable') {\n                        _this2.video.pause();\n                    }\n\n                    if (resp.auth.type == 'openADC') {\n                        _this2.video.play();\n                        if (_this2.hoverEvent == false) {\n                            _this2.video.onmouseover = function () {\n                                this.mute(false);\n                            };\n                            _this2.hoverEvent = true;\n                        }\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'eventsEndingImage',\n        value: function eventsEndingImage() {\n            var _this3 = this;\n\n            if (this.endingImage != null) {\n                this.endingImage.style.display = 'block';\n                this.clickable.style.height = '100%';\n                this.clickable.style.zIndex = '11';\n\n                this.endingImage.addEventListener('click', function () {\n                    if (_this3.data.endingImage.lpUrl) {\n                        // only open if landing url is not blank -yk\n                        _this3.tracker({\n                            type: 'end_image_click',\n                            tt: 'CTR'\n                        });\n                        _this3.linkOpener({\n                            url: _this3.data.endingImage.lpUrl\n                        });\n                    }\n                });\n\n                this.video.addEventListener('play', function () {\n                    _this3.endingImage.style.display = 'none';\n                });\n            }\n        }\n    }, {\n        key: 'eventsClickthrough',\n        value: function eventsClickthrough() {\n            var _this4 = this;\n\n            /* clickthrough */\n            if (this.data.endingImage.lpUrl) {\n                if (this.clickable != null) {\n                    this.clickable.setAttribute('href', '#');\n                    this.clickable.addEventListener('click', function () {\n                        _this4.tracker({\n                            type: 'end_image_click',\n                            tt: 'CTR'\n                        });\n                        _this4.linkOpener({\n                            url: _this4.data.endingImage.lpUrl\n                        });\n                    });\n                }\n            }\n\n            if (this.clickthrough != null) {\n                this.clickthrough.addEventListener('click', function () {\n                    _this4.linkOpener({\n                        url: _this4.data.clickthrough.lpUrl\n                    });\n                });\n            }\n        }\n    }, {\n        key: 'eventsReplayBtn',\n        value: function eventsReplayBtn() {\n            var _this5 = this;\n\n            if (this.replayBtn != '') {\n\n                /* ended, show replay */\n                this.video.addEventListener('ended', function () {\n                    _this5.replayBtn.querySelector('img').style.display = 'block';\n                });\n\n                this.replayBtn.querySelector('img').addEventListener('click', function (e) {\n                    _this5.video.unmute();\n                    _this5.video.play();\n                    e.target.style.display = 'none';\n                });\n            }\n        }\n    }, {\n        key: 'eventsControl',\n        value: function eventsControl() {\n            var _this6 = this;\n\n            if (this.control['play'] != 'undefined') {\n                /* show play by default if it is non autoplay or inview autoplay */\n                if (this.data.autoplay == 0) {\n                    this.control.play.querySelector('.dc-play').style.display = 'block';\n                    this.control.play.querySelector('.dc-pause').style.display = 'none';\n\n                    this.control.replay.querySelector('.dc-replay').style.display = 'none';\n\n                    /* if non autoplay unmute by default - NJ */\n                    this.control.audio.style.display = 'block';\n                    this.control.audio.querySelector('.dc-mute').style.display = 'block';\n                    this.control.audio.querySelector('.dc-unmute').style.display = 'none';\n\n                    /* unmute video by default - used in play event */\n                    this.unmuteDefault = true;\n                }\n                /* show pause by default if it is autoplay */\n                else {\n                        this.control.play.querySelector('.dc-pause').style.display = 'block';\n                        this.control.play.querySelector('.dc-play').style.display = 'none';\n\n                        this.control.audio.querySelector('.dc-mute').style.display = 'none';\n                        this.control.audio.querySelector('.dc-unmute').style.display = 'block';\n\n                        /* mute video by default - used in play event  */\n                        this.unmuteDefault = false;\n                    }\n\n                /* played, show mute/unmute */\n                this.video.addEventListener('play', function () {\n\n                    /* To mute or unmute video by default - on the first play only - NJ */\n                    if (_this6.data.autoplay == 0 && _this6.unmuteDefault && _this6.unmuteDefault != null) {\n                        _this6.mute(false);\n                        _this6.unmuteDefault = null;\n                    } else if (!_this6.unmuteDefault && _this6.unmuteDefault != null) {\n                        //this.video.mute();\n                        _this6.unmuteDefault = null;\n                    }\n\n                    /* play show/hide */\n                    _this6.control.play.querySelector('.dc-play').style.display = 'none';\n                    _this6.control.audio.style.display = 'block';\n                    _this6.control.play.querySelector('.dc-pause').style.display = 'block';\n\n                    /* make sure replay is hidden */\n                    _this6.control.replay.querySelector('.dc-replay').style.display = 'none';\n\n                    /* timer */\n                    var time_span = _this6.control.replay.querySelector('span');\n                    var time = Math.round(_this6.video.duration) - Math.round(_this6.video.currentTime || 0);\n                    time = isNaN(time) ? '' : time;\n                    if (time_span != null) {\n                        time_span.innerHTML = time;\n                        time_span.style.display = 'block';\n                    }\n\n                    clearInterval(_this6.timerInterval);\n                    _this6.timerInterval = setInterval(function () {\n                        var time = Math.round(_this6.video.duration) - Math.round(_this6.video.currentTime);\n                        time = isNaN(time) ? '' : time;\n                        if (time_span != null) {\n                            time_span.innerHTML = time;\n                        }\n\n                        /* video sync */\n                        var v_duration = Math.round(_this6.video.duration);\n                        var v_currentTime = Math.round(_this6.video.currentTime);\n                        var perc_25 = Math.round(v_duration * 0.25);\n                        var perc_50 = Math.round(v_duration * 0.5);\n                        var perc_75 = Math.round(v_duration * 0.75);\n\n                        if (_this6.video.currentTime >= _this6.video.duration || _this6.videoState != 1 && _this6.video.currentTime == 0) {\n                            time_span.style.display = 'none';\n                            clearInterval(_this6.timerInterval);\n                        }\n\n                        if (_this6.videoState != 1) {\n                            clearInterval(_this6.timerInterval);\n                        }\n\n                        if (typeof _this6.callbackEvents.onPlaying != 'undefined') {\n                            _this6.callbackEvents.onPlaying(Math.round(_this6.video.currentTime));\n                        }\n                    }, 1000);\n                });\n                /* for canvas switching - NJ */\n                this.video.addEventListener('playing', function () {\n                    if (_this6.canvasVideoSwitched) {\n                        _this6.overlay.style.display = 'none';\n                    }\n                });\n                /* pause, show replay */\n                this.video.addEventListener('pause', function () {\n                    _this6.control.play.querySelector('.dc-play').style.display = 'block';\n                    _this6.control.play.querySelector('.dc-pause').style.display = 'none';\n                });\n\n                /* ended, show replay */\n                this.video.addEventListener('ended', function () {\n                    _this6.control.play.querySelector('.dc-play').style.display = 'none';\n                    _this6.control.play.querySelector('.dc-pause').style.display = 'none';\n                    _this6.control.audio.style.display = 'none';\n                    //this.control.replay.querySelector('.dc-replay').style.display = 'block';\n\n                    setTimeout(function () {\n                        _this6.control.replay.querySelector('.dc-replay').style.display = 'block';\n                    }, 1000);\n\n                    if (typeof _this6.callbackEvents.onPlaying != 'undefined') {\n                        _this6.callbackEvents.onEnded();\n                    }\n                });\n\n                /* control events */\n                this.control.play.querySelector('.dc-play').addEventListener('click', function (e) {\n                    _this6.video.play();\n                });\n                this.control.play.querySelector('.dc-pause').addEventListener('click', function (e) {\n                    _this6.video.pause();\n                });\n                this.control.audio.querySelector('.dc-mute').addEventListener('click', function (e) {\n                    _this6.mute(true);\n                });\n                this.control.audio.querySelector('.dc-unmute').addEventListener('click', function (e) {\n\n                    /* tracker */\n                    _this6.tracker({\n                        type: 'video_unmute'\n                    });\n\n                    /* canvas switching */\n                    if (_this6.canvasVideo && !_this6.canvasVideoSwitched) {\n                        _this6.canvasVideoSwitched = true;\n                        _this6.canvas = _this6.video;\n\n                        setTimeout(function () {\n                            _this6.canvas.pause();\n                            _this6.canvas.style.display = 'none';\n\n                            _this6.canvas.parentNode.removeChild(_this6.canvas);\n                        }, 1000);\n\n                        //this.overlay.style.display = 'block';\n\n                        var currentTime = _this6.video.currentTime;\n\n                        _this6.video = _this6.videoContainer.querySelector('#video');\n                        _this6.video.currentTime = currentTime;\n                        _this6.video.style.display = 'block';\n                        _this6.mute(false);\n\n                        _this6.loadVideo();\n                        _this6.events();\n                        // this.video.play();\n                        setTimeout(function () {\n                            _this6.video.play();\n                        }, 1000);\n                    }\n\n                    _this6.mute(false);\n                });\n                this.control.replay.querySelector('.dc-replay').addEventListener('click', function (e) {\n                    /* tracker */\n                    _this6.tracker({\n                        type: 'video_replay'\n                    });\n                    _this6.mute(false);\n                    _this6.video.play();\n                    /* hide replay */\n                    e.target.style.display = 'none';\n\n                    _this6.clickable.removeAttribute('style');\n                    _this6.clickable.style.display = 'block';\n                    _this6.clickable.style.height = '';\n                    _this6.clickable.style.zIndex = '10';\n                });\n\n                if (this.data.mouseoutMute) {\n                    this.video.onmouseout = function () {\n                        console.log('out');\n                        this.mute(true);\n                    };\n                }\n            }\n        }\n    }, {\n        key: 'mute',\n        value: function mute(_mute) {\n            if (_mute) {\n                this.video.mute();\n                this.control.audio.querySelector('.dc-unmute').style.display = 'block';\n                this.control.audio.querySelector('.dc-mute').style.display = 'none';\n            } else {\n                this.video.unmute();\n                this.control.audio.querySelector('.dc-unmute').style.display = 'none';\n                this.control.audio.querySelector('.dc-mute').style.display = 'block';\n            }\n        }\n    }, {\n        key: 'linkOpener',\n        value: function linkOpener(options) {\n            // console.log(options.url);\n            this.app.open(options.url);\n        }\n    }, {\n        key: 'tracker',\n        value: function tracker(options) {\n\n            if (!this.preview) {\n                //console.log(options.type);\n                this.app.tracker(typeof options.tt != 'undefined' ? options.tt : 'E', options.type, this.layer, this.layer, options.value || '');\n\n                if (typeof this.data.extTrackers != 'undefined' && this.data.extTrackers.enabled && (this.data.extTrackers.type == 0 || this.data.extTrackers.type == 1)) {\n                    this.extTracker({\n                        type: options.type\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'extTracker',\n        value: function extTracker(options) {\n            /*\r\n            * external tracker with dsp macro support ( tmc )\r\n            */\n            if (!this.preview && typeof this.data.extTrackers[options.type] != 'undefined' && this.data.extTrackers[options.type] != '') {\n\n                var url = this.data.extTrackers[options.type];\n                /* make sure we have received the macro */\n\n                url = this.app.macro({\n                    url: this.data.extTrackers[options.type],\n                    dspMacro: this.app.dspMacro\n                });\n\n                /* js */\n                if (this.data.extTrackers.type == 0) {\n                    var s = document.createElement('script');\n                    s.style.display = 'none';\n                    s.src = url;\n\n                    document.body.appendChild(s);\n                }\n                /* img */\n                else if (this.data.extTrackers.type == 1) {\n                        var i = document.createElement('img');\n                        i.style.width = '1px';\n                        i.style.height = '1px';\n                        i.style.display = 'none';\n                        i.src = url;\n\n                        document.body.appendChild(i);\n                    }\n\n                /* temporary trackers which fire when video_100 is fired for ext tracker */\n                if (options.type == 'video_play_100') {\n                    this.tracker({\n                        type: 'viewthrough',\n                        value: encodeURIComponent(url)\n                    });\n                }\n\n                delete this.data.extTrackers[options.type];\n            }\n        }\n    }, {\n        key: 'trackPlayTime',\n        value: function trackPlayTime() {\n            var duration = this.video.duration;\n            var currentTime = this.video.currentTime;\n\n            if (currentTime >= duration && this.tracked.indexOf('video_play_100') < 0) {\n\n                this.tracked.push('video_play_100');\n                /* tracker */\n                this.tracker({\n                    type: 'video_play_100',\n                    tt: ''\n                });\n                /* stop play time tracking */\n                clearInterval(this.playTimeTracking);\n            } else if (currentTime >= duration * 0.75 && this.tracked.indexOf('video_play_75') < 0) {\n                this.tracked.push('video_play_75');\n                /* tracker */\n                this.tracker({\n                    type: 'video_play_75',\n                    tt: ''\n                });\n            } else if (currentTime >= duration * 0.5 && this.tracked.indexOf('video_play_50') < 0) {\n                this.tracked.push('video_play_50');\n                /* tracker */\n                this.tracker({\n                    type: 'video_play_50',\n                    tt: ''\n                });\n            } else if (currentTime >= duration * 0.25 && this.tracked.indexOf('video_play_25') < 0) {\n                this.tracked.push('video_play_25');\n                /* tracker */\n                this.tracker({\n                    type: 'video_play_25',\n                    tt: ''\n                });\n            }\n        }\n    }, {\n        key: 'mobile',\n        value: function mobile() {\n            var _this7 = this;\n\n            this.images_list = [];\n            for (var i = 1; i <= Math.ceil(this.data.frames / 20); i++) {\n\n                if (i <= 3) {\n\n                    this.loadJSON(this.data.src.img_url.replace('image_', '') + 'chunks' + i + '.json', function (response) {\n                        // Parse JSON string into object\n                        var actual_JSON = JSON.parse(response);\n                        _this7.images_list[actual_JSON['index']] = actual_JSON['c'];\n\n                        // Check if its first chunk \n                        if (actual_JSON['index'] == 0) {\n                            // init video only if first chunk is loaded\n                            _this7.video = new _mobile2.default({\n                                id: _this7.id,\n                                fps: _this7.data.fps,\n                                numberOfFrames: _this7.data.frames,\n                                loop: _this7.data.loop,\n                                dimensions: [{\n                                    width: _this7.data.w,\n                                    height: _this7.data.h,\n                                    imagesUrl: _this7.images_list\n                                }],\n                                defaultDimension: 0,\n                                autoplay: _this7.autoplay == 1 ? true : false\n                            });\n\n                            var desktopVideo = _this7.videoContainer.querySelector('video') || _this7.videoContainer.querySelector('canvas');\n                            desktopVideo.parentNode.appendChild(_this7.video);\n                            _this7.events();\n\n                            /* create mute unmute function for desktop video */\n                            _this7.video.mute = function () {\n                                video.muted = true;\n                            };\n                            _this7.video.unmute = function () {\n                                video.muted = false;\n                            };\n\n                            _this7.video.play();\n                        }\n                    });\n                } else {\n                    this.videos_chunks.push(this.data.src.img_url.replace('image_', '') + 'chunks' + i + '.json');\n                }\n            }\n        }\n    }, {\n        key: 'loadJSON',\n        value: function loadJSON(url, callback) {\n\n            var xobj = new XMLHttpRequest();\n            xobj.overrideMimeType(\"application/json\");\n            xobj.open('GET', url, true); // Replace 'my_data' with the path to your file\n            xobj.onreadystatechange = function () {\n                if (xobj.readyState == 4 && xobj.status == \"200\") {\n                    // Required use of an anonymous callback as .open will NOT return a value but simply returns undefined in asynchronous mode\n                    callback(xobj.responseText);\n                }\n            };\n            xobj.send(null);\n        }\n    }]);\n\n    return Video;\n}();\n\nexports.default = Video;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _effects = __webpack_require__(8);\n\nObject.keys(_effects).forEach(function (key) {\n  if (key === "default" || key === "__esModule") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _effects[key];\n    }\n  });\n});\n\nvar _mads = __webpack_require__(9);\n\nvar _mads2 = _interopRequireDefault(_mads);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _mads2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbWFkcy1jdXN0b20vbGliL2luZGV4LmpzPzUyZmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2VmZmVjdHMgPSByZXF1aXJlKCcuL2VmZmVjdHMnKTtcblxuT2JqZWN0LmtleXMoX2VmZmVjdHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9lZmZlY3RzW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuXG52YXIgX21hZHMgPSByZXF1aXJlKCcuL21hZHMnKTtcblxudmFyIF9tYWRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21hZHMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBfbWFkczIuZGVmYXVsdDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbWFkcy1jdXN0b20vbGliL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(5);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(11)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js??ref--2-1!../node_modules/postcss-loader/lib/index.js!./main.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js??ref--2-1!../node_modules/postcss-loader/lib/index.js!./main.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tYWluLmNzcz9kMTJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuL21haW4uY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuL21haW4uY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuL21haW4uY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tYWluLmNzc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable */\nvar Mobile = function Mobile(options) {\n    _classCallCheck(this, Mobile);\n\n    /* mobile doesn't support CustomEvent so use this as fallback - April */\n    if (typeof CustomEvent === 'undefined') {\n        CustomEvent = function CustomEvent(type, eventInitDict) {\n            var event = document.createEvent('CustomEvent');\n            event.initCustomEvent(type, eventInitDict['bubbles'], eventInitDict['cancelable'], eventInitDict['detail']);\n            return event;\n        };\n    }\n    var connectionsPerHost = 6,\n        // max simultaneous http connections to same host; Varies for different versions of Android and iOS\n    maxPossibleConnections = 16,\n        // max connections to all hosts; Can varies for different versions of Android and iOS\n    memWarning = 600,\n        // after the number of images cached in memory hits this - start cleaning images from memory after they are shown (when play or seek) (this still means there can hold up to memWarning potentially useless images in cache)\n    memCritical = 1200,\n        // maximum amount of images to cache in memory. After the size of cache hits this, prevent downloading new images until part of cache is released. The system relies on automatic cleaning when playing and when seeking so we should have gap Critical minus Warning\n    isMemCritical = false,\n        // true if we have ever hit the memory warning\n    cleaningTolerance,\n        // if we are sure we have downloaded the right images, no need to remove images immediately after they are shown but save them for future\n    totalConnections,\n        // calculated taking into consideration number of CDNs and audio download state\n    maxLoadedPerFrame = 4,\n        // limit number of images downloaded per animation frame; this prevents video freeze to unpack from JPEG/PNG\n    loadPerFrame,\n        // number of images already downloaded during this frame\n    isLoadingBlocked,\n        tabId = options.id,\n        canvasEl,\n        // canvas node\n    canvasCtx,\n        // canvas 2d context\n    percentageEl,\n        // text element displaying loading percentage pressing controls\n    hideControlsTimeoutId,\n        // handler to timeout that hides controls when not used\n\n    FPS = options.fps,\n        // frames per second\n    origFpi = 1000 / FPS,\n        fpi = origFpi,\n        // delay between frames in milliseconds\n    syncTolerance,\n        // max allowed number of frames that audio is not in sync with video; can increase if audio engine is slow on the concrete device\n\n    threads = 0,\n        // number of images downloaded simultaneously\n    noInternetTimeout,\n        // if no images downloaded, display a hint\n    calcSpeedTimeoutId,\n        // handler on timeout periodically recalculating the speed\n    loadThickeningStage,\n        // how many times the downloading \"worm\" has hit the video end. The \"worm\" can go back to download holes in the middle\n\n    loadStartPos,\n        // from which position we started downloading in the latest download session\n    loadStartCount,\n        // totalLoaded at the beginning of session. Useful for speed count method 2\n    loadStartTime,\n        // time when latest download (and speed measurement as well) started\n    totalStartTime = Date.now(),\n        totalLoaded = 0,\n        // number of totally downloaded images loaded since the beginning of time\n    totalCached = 0,\n        speedFactor,\n        // calculated value - shows how much download speed is slower than playing speed; value > 1 means that video is playing faster than downloading\n    oldSpeedFactor,\n        // since we have 2 speed methods, take the average value of both\n    bufferSize = FPS,\n        // if connection is slow; buffer is calculated so that video is played without lags to the very end\n    isSpeedUnknown = true,\n        // whether we have speed approximation or not\n    calcSpeedMethod = 1,\n        // method == 1 means calculate using totalLoaded, method == 2 means calculate speed using loadedInSession. when we hit the memory limit, we skip downloading images, so can't calculate speed precisely\n    loadingThrottleTimeoutIds = [],\n        // if number of image cached reaches memCritical, we start throttling images download. We should release those timed out downloads as soon as seek happens\n\n    videoStopped = 0,\n        videoWaitingForBuffer = 2,\n        videoPlaying = 6,\n        videoState = videoStopped,\n        isVideoTryingToPlay,\n        // whether is trying to play video\n    isVideoWaiting = false,\n        startVideoOnImageLoadTimeoutId,\n        videoIntervalId,\n        // correcting interval handler\n\n    playSkip = 1,\n        // step between frames when playing; 1 - no frames skipped; 2 - every second is skipped\n    loadSkip = 1,\n        // step between frames when downloading; 1 - no frames skipped; 2 - every second is skipped\n    setSkippingTo1 = Infinity,\n        // position after which frames won't be skipped because we've downloaded enough frames or the speed is good\n    setSkippingTo2 = Infinity,\n        // position after which we skip every second frame; At first loadSkip is set so that download rate changes. Later, when playingPos reaches that magic position (setSkippingTo1 or 2) where download rate has changed, - playSkip is set to corresponding value\n    framesDelayed,\n        // how many frames could not play because the images were not downloaded yet\n\n    doSynchronisationAsap = false,\n        // do synchronize audio and video as soon as possible\n\n    nextLoadingPos,\n        // position of the NEXT image to load\n    playingPos = 0,\n        // position of now playing or about to play from\n\n    videoLength = options.numberOfFrames,\n        // number of frames in the video\n    duration = videoLength / FPS,\n        // duration of video in seconds\n    images = new Array(videoLength),\n        // all saved images together with event handlers\n    dimensions = options.dimensions,\n\n    // array of all DIMENSIONS objects\n    currentDimension,\n        // current dimension\n    width,\n        // width of current dimension\n    height,\n        // height of current dimension\n    imagesUrl,\n        // url from which to load images\n    cdnsCount,\n        isLoop = options.loop,\n        // weather play video in a loop\n    isSeekReleased = true,\n        // do not update seekbar when it's been dragged or clicked\n    isPreviewShown,\n        // special case when the preview frame is shown before starting video\n    playEvent = new CustomEvent('play', {\n        detail: {\n            id: tabId\n        }\n    }),\n        endEvent = new CustomEvent('ended', {\n        detail: {\n            id: tabId\n        }\n    }),\n        pauseEvent = new CustomEvent('pause', {\n        detail: {\n            id: tabId\n        }\n    }),\n        replayEvent = new CustomEvent('replay', {\n        detail: {\n            id: tabId\n        }\n    }),\n        canvasWidth = 0,\n        canvasHeight = 0;\n\n    if (options.fastStart) {\n        // USE options.fastStart to push the player start as soon as possible. If the played is deployed into a large web page, http requests from other elements can break speed calculation and lead to later video start\n        isSpeedUnknown = false;\n        bufferSize = connectionsPerHost;\n    }\n\n    function detectOldPhones() {\n        // Detect old phones and adjust memory saving mode for them\n        var version,\n            ua = navigator.userAgent,\n            io = ua.indexOf(\"Android\");\n\n        if (io !== -1) {\n            version = parseFloat(ua.slice(io + 8));\n            if (version < 3) {\n                if (version < 2.4) {\n                    memWarning *= 2 / 3;\n                    memCritical *= 2 / 3;\n                    connectionsPerHost = 8;\n                    maxPossibleConnections = 10;\n                    if (version < 2.3) {\n                        memWarning *= 2 / 3;\n                        memCritical *= 2 / 3;\n                        setLoadSkip(2); // old OSes target old phones which have very little memory and slow processors\n                        setPlaySkip(2);\n                    }\n                }\n            }\n        } else if (/iP(hone|od|ad)/i.test(ua)) {\n            version = parseInt(navigator.appVersion.match(/OS (\\d+)_?/)[1], 10);\n            if (version < 5) {\n                memWarning *= 2 / 3;\n                memCritical *= 2 / 3;\n                if (version < 4) {\n                    memWarning *= 2 / 3;\n                    memCritical *= 2 / 3;\n                    setLoadSkip(2);\n                    setPlaySkip(2);\n                }\n            }\n        }\n    }\n\n    function getImageUrl(index) {\n        var n = 20;\n        var y = imagesUrl[Math.floor(index / n)];\n        if (typeof y == 'undefined' || typeof y[index % n] == 'undefined') {\n            return '';\n        }\n\n        return y[index % n];\n\n        return imagesUrl[index % cdnsCount] + (index + 1) + '.jpg'; // distribute images loading across CDNs\n    }\n\n    function setLoadSkip(val) {\n        // set images skipping when loading\n        if (loadSkip !== val) {\n            loadSkip = val;\n\n            if (val === 2) {\n                // skip images loading - load odd images only\n                loadThickeningStage = 0;\n                if (nextLoadingPos % 2) {\n                    // if position is odd, set downloading to the next position\n                    setSkippingTo2 = nextLoadingPos - 1; // we have \"holes\" since the previous position\n                    nextLoadingPos++;\n                } else {\n                    setSkippingTo2 = nextLoadingPos; // if position is even, everything is fine\n                }\n                setSkippingTo1 = Infinity;\n            } else {\n                setSkippingTo1 = nextLoadingPos; // stop skipping since this position\n                setSkippingTo2 = Infinity;\n            }\n        }\n    }\n\n    function setPlaySkip(val) {\n        playSkip = val;\n        setSkippingTo1 = Infinity;\n        setSkippingTo2 = Infinity;\n        resetFpi();\n    }\n\n    function adjustPlayingPos() {\n        var currentImageLoaded = images[playingPos],\n            // check if something is already loaded\n        pattern = getPattern(playingPos);\n        currentImageLoaded = currentImageLoaded && currentImageLoaded.complete;\n\n        if (currentImageLoaded && pattern === -2 || pattern === 2) {\n            setLoadSkip(2);\n            setPlaySkip(2);\n            if (pattern === 2) {\n                playingPos++;\n            }\n        } else if (pattern === 1) {\n            setLoadSkip(1);\n            setPlaySkip(1);\n            if (!currentImageLoaded) {\n                playingPos++;\n            }\n        } else if (pattern === -1) {\n            setLoadSkip(1);\n            setPlaySkip(1);\n            playingPos += 2;\n        } else if (pattern === 0 && currentImageLoaded) {\n            setLoadSkip(1);\n            setPlaySkip(1);\n        } else if (loadSkip === 2 && playingPos > setSkippingTo2) {\n            setPlaySkip(2);\n        } else if (loadSkip === 1 && playingPos > setSkippingTo1) {\n            setPlaySkip(1);\n        }\n        // pesimmistic patterns\n        else if (!isSpeedUnknown && speedFactor < 1) {\n                setLoadSkip(2);\n                setPlaySkip(2);\n            }\n\n        if (playSkip === 2 && playingPos % 2 && playingPos < videoLength - 1) {\n            playingPos++;\n        }\n    }\n\n    function resetFpi() {\n        fpi = origFpi * playSkip;\n    }\n\n    function resizeVideo(size) {\n\n        if (size >= 0 && size < dimensions.length) {\n            currentDimension = size;\n\n            var dimension = dimensions[currentDimension];\n            width = dimension.width;\n            height = dimension.height;\n            canvasWidth = width;\n            canvasHeight = height;\n            imagesUrl = dimension.imagesUrl;\n            cdnsCount = imagesUrl.length;\n            totalConnections = Math.min(connectionsPerHost * cdnsCount, maxPossibleConnections) - 1;\n\n            canvasEl.width = width;\n            canvasEl.height = height;\n        }\n    }\n\n    function getSpeed() {\n        if (calcSpeedMethod === 1) {\n            speedFactor = totalLoaded / (Date.now() - totalStartTime) * origFpi;\n        } else if (calcSpeedMethod === 2) {\n            speedFactor = (oldSpeedFactor + (totalLoaded - loadStartCount) / (Date.now() - loadStartTime) * origFpi) / 2;\n        }\n    }\n\n    function getBufferSize() {\n        var val;\n\n        if (loadThickeningStage === 0) {\n            val = (videoLength - playingPos) * (1 - speedFactor * loadSkip);\n        } else {\n            val = 0;\n        }\n\n        return Math.max(totalConnections, Math.min(val, memCritical - totalCached - 1)) + totalConnections;\n    }\n\n    function calculateSpeed() {\n        getSpeed();\n\n        if (speedFactor > 2) {\n            setLoadSkip(1);\n            // resizeVideo(sizePreset + 1);\n        } else if (speedFactor > 0.8) {\n            setLoadSkip(1);\n        } else {\n            if (speedFactor < 0.5) {\n                setLoadSkip(2);\n                // resizeVideo(sizePreset - 1);\n            }\n        }\n\n        bufferSize = getBufferSize();\n\n        if (speedFactor < 1) {\n            var loadedInSession = nextLoadingPos - playingPos;\n            if (loadedInSession >= 0 && loadedInSession < bufferSize) {\n                percentageEl.innerText = Math.round(Math.sqrt(loadedInSession / bufferSize) * 100) + '%';\n                percentageEl.className = 'vp-hidden spinner';\n            }\n        }\n\n        calcSpeedTimeoutId = setTimeout(calculateSpeed, 300);\n\n        if (isSpeedUnknown) {\n            clearTimeout(noInternetTimeout);\n            isSpeedUnknown = false;\n        }\n    }\n\n    function resetLoadData(currentImageLoaded) {\n        var topLimit = playingPos + memWarning;\n\n        if (playingPos < loadStartPos || nextLoadingPos < playingPos || !currentImageLoaded || setSkippingTo1 < playingPos || setSkippingTo1 > topLimit || setSkippingTo2 < playingPos || setSkippingTo2 > topLimit) {\n            if (playSkip === 2) {\n                setSkippingTo1 = Infinity;\n                setSkippingTo2 = playingPos;\n            } else {\n                setSkippingTo1 = Infinity;\n                setSkippingTo2 = Infinity;\n            }\n        }\n\n        nextLoadingPos = playingPos;\n        loadStartPos = playingPos;\n\n        if (playingPos === 0 && nextLoadingPos >= videoLength) {\n            cleaningTolerance = memCritical - 50;\n        } else {\n            cleaningTolerance = memWarning;\n        }\n\n        if (isMemCritical) {\n            loadStartCount = totalLoaded;\n            loadStartTime = Date.now();\n            calcSpeedMethod = 2;\n            oldSpeedFactor = speedFactor;\n\n            for (var i = 0, l = loadingThrottleTimeoutIds.length; i < l; i++) {\n                clearTimeout(loadingThrottleTimeoutIds[i]);\n                threads--;\n            }\n            loadingThrottleTimeoutIds = [];\n        }\n\n        if (totalCached > cleaningTolerance) {\n            cleanMemory();\n        }\n\n        if (isVideoTryingToPlay) {\n            isVideoWaiting = true;\n            videoState = videoWaitingForBuffer;\n        }\n\n        isPreviewShown = false;\n        doSynchronisationAsap = false;\n        resetFpi();\n\n        framesDelayed = 0;\n        loadThickeningStage = 0;\n        syncTolerance = FPS / 3;\n        isLoadingBlocked = false;\n\n        if (!isSpeedUnknown) {\n            clearTimeout(calcSpeedTimeoutId);\n            calcSpeedTimeoutId = setTimeout(calculateSpeed, 100);\n            bufferSize = getBufferSize();\n        }\n    }\n\n    function onImageLoad(index) {\n        totalLoaded++;\n        totalCached++;\n\n        if (isVideoWaiting) {\n            if (nextLoadingPos - playingPos > bufferSize) {\n                // when buffer is full, start playing video\n                startVideoOnImageLoadTimeoutId = setTimeout(function () {\n                    if (isVideoWaiting) {\n                        startPlaying();\n                    }\n                }, fpi);\n            } else if (index === playingPos && !isPreviewShown) {\n                playFrame();\n                isPreviewShown = true;\n            } else if (isSpeedUnknown && totalLoaded > totalConnections) {\n                calculateSpeed();\n            }\n        } else {\n            loadPerFrame++;\n            if (loadPerFrame > maxLoadedPerFrame) {\n                setTimeout(loadNextImage, fpi / 7);\n                return;\n            }\n        }\n\n        loadNextImage();\n    }\n\n    function cleanThrottle(id) {\n        var i = loadingThrottleTimeoutIds.indexOf(id);\n\n        if (i !== -1) {\n            loadingThrottleTimeoutIds.splice(i, 1);\n        }\n    }\n\n    function onImageFailed(index) {\n        deleteImage(images[index], index, false);\n\n        if (index >= playingPos) {\n\n            var timeoutId = setTimeout(function () {\n                if (index >= playingPos && index - playingPos < cleaningTolerance && (loadSkip === 1 || loadSkip === 2 && index % 2 === 0) && !images[index]) {\n                    loadImage(index);\n                } else {\n                    loadNextImage();\n                }\n                cleanThrottle(timeoutId);\n            }, videoState === videoPlaying ? 10 : 500); // reload image\n\n            loadingThrottleTimeoutIds.push(timeoutId);\n        } else {\n            loadNextImage();\n        }\n    }\n\n    function loadImage(index) {\n        var img = new Image();\n        images[index] = img;\n\n        img.onload = function () {\n\n            onImageLoad(index);\n        };\n        img.onerror = function () {\n            onImageFailed(index);\n        };\n        img.src = getImageUrl(index);\n    }\n\n    function deleteImage(img, index, complete) {\n        images[index] = undefined;\n        if (complete) {\n            totalCached--;\n        }\n        img.onload = undefined;\n        img.onerror = undefined;\n        img.src = ''; // only this line actually releases memory taken by the bitmap\n    }\n\n    function loadNextImage() {\n        if (!isVideoTryingToPlay && nextLoadingPos - playingPos > bufferSize) {\n            // If video is stopped, do not load more than bufferSize images\n            threads--; // Indicate we have killed one downloading thread\n            isLoadingBlocked = true;\n        } else if (totalCached > memCritical) {\n            // Do not hold too much images in cache, because otherwise OS will terminate the browser\n            getSpeed(); // This is the last time when we can calculate speed percsisely using current method; The downloading is starting to throttle now\n            isMemCritical = true;\n            calcSpeedMethod = 0; // Neither method will work now\n            clearTimeout(calcSpeedTimeoutId); // Stop calculating speed\n\n            if (isVideoTryingToPlay) {\n                // If video is started - start throttling\n                var timeoutId = setTimeout(function () {\n                    loadNextImage(); // Continue thread after timeout\n                    cleanThrottle(timeoutId); // Remove timeout from the list because it has fired; We track active timeouts only\n                }, 4 * fpi * totalConnections); // Periodically ping if we can resume downloading\n\n                loadingThrottleTimeoutIds.push(timeoutId); // Record this timeout - so we can quickly move to downloading something different\n            } else {\n                threads--; // Otherwise stop downloading by killing current thread\n                isLoadingBlocked = true;\n            }\n        } else {\n            // IF EVERYTHING IS FINE:\n\n            while (nextLoadingPos < videoLength) {\n                // Find next image to load by iterating over the array\n                if (images[nextLoadingPos]) {\n                    nextLoadingPos += loadSkip;\n                } else {\n                    loadImage(nextLoadingPos);\n                    nextLoadingPos += loadSkip; // Set position to start the new search from\n                    return; // Success\n                }\n            }\n\n            loadThickeningStage++; // If we did not return, it means we have reached the end\n\n            if (isVideoWaiting) {\n                // If we wanted to play, but could not, start playing\n                startPlaying();\n            }\n\n            if (totalCached < videoLength && loadThickeningStage < 3) {\n                // If we have downloaded to the end but have \"holes\" in the middle (plus prevent possible recursion)\n\n                if (loadThickeningStage === 1 && loadSkip === 2) {\n                    // If we are skipping frames - put all downloading threads to fix the holes while playing, and load the rest of the video in the best possible quality\n                    nextLoadingPos = playingPos + // predict the position from which we can load without skipping to the very end:\n                    Math.floor(getBufferSize()); // and downloading speed with the help of wise function returning real-time buffer size depending on download speed\n                    setLoadSkip(1); // This records the position from which we load without skipping\n                    cleaningTolerance = memCritical - 50;\n                } else {\n                    nextLoadingPos = 0; // Otherwise check the video for holes from the very beginning\n                    if (memCritical > videoLength / 2) {\n                        // I have an idea of optimizing the video for seek:\n                        loadSkip = 1; // if it's possible, download the video entirely\n                    } else {\n                        loadSkip = 2; // if not, download with frame skipping. This lowers the video quality, but allows to seek over the maximum part of the video video instantly\n                    }\n                }\n\n                loadNextImage();\n            } else {\n                threads--;\n                isLoadingBlocked = true;\n            }\n        }\n    }\n\n    function cleanMemory() {\n\n        function cleanImage(i) {\n            var img = images[i];\n            if (img) {\n                var complete = img.complete;\n                if (!complete) {\n                    // if we are deleting currently downloading image\n                    threads--; // it means we kill one downloading thread\n                }\n                deleteImage(img, i, complete);\n            }\n        }\n\n        var i = 0;\n\n        while (i < playingPos && totalCached >= cleaningTolerance) {\n            cleanImage(i++);\n        }\n\n        i = videoLength - 1;\n        while (totalCached >= cleaningTolerance) {\n            cleanImage(i--);\n        }\n    }\n\n    function restart() {\n        playingPos = 0;\n        stopPlaying({ delayed: false });\n        drawFrame();\n\n        if (isLoop) {\n            loadVideo();\n        } else {\n            isVideoTryingToPlay = false;\n        }\n    }\n\n    function drawFrame() {\n\n        canvasEl.currentTime = playingPos / FPS;\n\n        var img = images[playingPos],\n            complete = img && img.complete;\n\n        if (typeof img == 'undefined') {\n            return;\n        }\n\n        var height = img.height;\n\n        var x = 0,\n            y = 0;\n\n        /* adjust postion */\n        if (img.width > img.height) {\n            y = (canvasHeight - img.height) / 2;\n        } else {\n            x = (canvasWidth - img.width) / 2;\n\n            if (img.height < canvasHeight) {\n                y = (canvasHeight - img.height) / 2;\n            }\n        }\n\n        if (complete) {\n            // handle broken frame\n            canvasCtx.drawImage(img, x, y, img.width, img.height); // draw the frame\n\n            if (totalCached > cleaningTolerance) {\n                deleteImage(img, playingPos, complete);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    function iteratePlayingPos() {\n        loadPerFrame = 0;\n        playingPos++;\n\n        if (playingPos >= setSkippingTo1) {\n            setPlaySkip(1);\n        } else if (playingPos > setSkippingTo2) {\n            setPlaySkip(2);\n        }\n\n        if (playSkip === 2) {\n            playingPos++;\n        }\n    }\n\n    var autoIncrement = 0,\n        intervals = {};\n\n    var clearCorrectingInterval = function clearCorrectingInterval(id) {\n        clearTimeout(intervals[id]);\n        delete intervals[id];\n    };\n\n    function playFrame() {\n\n        if (doSynchronisationAsap || playingPos % 7 === 0) {\n            doSynchronisationAsap = false;\n        }\n\n        if (drawFrame()) {\n            iteratePlayingPos();\n            if (playingPos >= videoLength) {\n                canvasEl.dispatchEvent(endEvent);\n                restart();\n                return;\n            }\n            if (isPreviewShown && !loadThickeningStage && videoLength > nextLoadingPos && nextLoadingPos - playingPos < totalConnections) {\n                setLoadSkip(2);\n            }\n        } else {\n            delayFrames();\n        }\n    }\n\n    function delayFrames() {\n        var pattern = getPattern(playingPos);\n\n        if (pattern === 0 || pattern === 1) {\n            playingPos++;\n        }\n        if (pattern === -1) {\n            playingPos += 2;\n        } else if (pattern === 2) {\n            playingPos++; // get in sync with frames skipping\n            setLoadSkip(2); // set skipping, it looks like we can't download video in good quality\n        } else {\n            setLoadSkip(2); // set skipping, it looks like we can't download video in good quality\n\n            if (nextLoadingPos < playingPos ||\n            //nextLoadingPos - playingPos > 100 ||\n            framesDelayed > 2 * syncTolerance) {\n                // console.log('delayed');\n                stopPlaying({ delayed: true });\n                loadVideo();\n            }\n            framesDelayed++;\n        }\n    }\n\n    function getPattern(index) {\n        var img = images[++index]; // check weather we reached an area loaded with loadSkip = 2\n        img = img && img.complete; // recognize the pattern where every second image is skipped\n        var img1 = images[++index];\n        img1 = img1 && img1.complete;\n        var img2 = images[++index];\n        img2 = img2 && img2.complete;\n        if (img && !img1 && img2) {\n            // it looks like the images are loaded ok with loadStep === 2\n            return 2;\n        } else if (img && img1 && img2) {\n            return 1;\n        } else if (!img && img1 && !img2) {\n            return -2;\n        } else if (img1 && img2) {\n            return -1;\n        } else if (img && img1) {\n            return 0;\n        }\n    }\n\n    function startPlaying() {\n        startVideo();\n    }\n\n    function stopPlaying(options) {\n        if (!options.delayed && playingPos != 0) {\n            canvasEl.dispatchEvent(pauseEvent);\n        }\n        clearTimeout(calcSpeedTimeoutId);\n        percentageEl.className = 'vp-hidden spinner';\n\n        isVideoWaiting = false;\n        videoState = videoStopped;\n\n        clearCorrectingInterval(videoIntervalId);\n        clearInterval(startVideoOnImageLoadTimeoutId);\n    }\n\n    function startVideo() {\n        canvasEl.dispatchEvent(playEvent);\n        clearTimeout(calcSpeedTimeoutId);\n        percentageEl.className = 'vp-hidden spinner';\n\n        isVideoWaiting = false;\n        videoState = videoPlaying;\n        isPreviewShown = true;\n\n        clearCorrectingInterval(videoIntervalId);\n        videoIntervalId = setCorrectingInterval(playFrame);\n        clearTimeout(startVideoOnImageLoadTimeoutId);\n    }\n\n    function loadVideo() {\n\n        adjustPlayingPos();\n\n        if (playingPos >= videoLength) {\n            // some error protection\n            restart();\n            return;\n        }\n        var currentImageLoaded = images[playingPos];\n        currentImageLoaded = currentImageLoaded && currentImageLoaded.complete;\n\n        resetLoadData(currentImageLoaded);\n\n        while (threads < totalConnections && !isLoadingBlocked) {\n            // start loading maxConnections images\n            loadNextImage();\n            threads++;\n        }\n\n        if (currentImageLoaded) {\n            // if (isVideoTryingToPlay && (nextLoadingPos - playingPos > bufferSize)) {\n            //     startPlaying();\n            // } else {\n            //     playFrame();\n            //     isPreviewShown = true;\n            // }\n            /* fix play shutter - NJ */\n            startPlaying();\n        }\n    }\n\n    function play() {\n        isVideoTryingToPlay = true;\n        loadVideo();\n    }\n\n    function stop() {\n        isVideoTryingToPlay = false;\n        stopPlaying({ delayed: false });\n    }\n\n    /* replay video, audio play by default - NJ */\n    function replay() {\n        canvasEl.dispatchEvent(replayEvent);\n        restart();\n        startPlaying();\n        isTrying2Play = true;\n        isVideoTryingToPlay = true;\n    }\n\n    // function to get the current playing time - April\n    function currentTime() {\n        return playingPos / FPS;\n    }\n\n    function updateImagesUrl(i) {\n        imagesUrl = i;\n        console.log(imagesUrl);\n    }\n\n    this.updateImagesUrl = updateImagesUrl;\n\n    this.play = play;\n\n    this.stop = stop;\n\n    this.pause = stop;\n\n    this.replay = replay;\n\n    this.currentTime = currentTime;\n\n    this.duration = duration;\n\n    function createHTML() {\n\n        var t = document.createElement('div');\n\n        var $ = t.querySelector.bind(t);\n\n        t.innerHTML = '<canvas id=vp-canvas></canvas> \\\r\n                     </div>\\\r\n                     <div id=vp-percentage class=vp-hidden></div>';\n\n        canvasEl = $('#vp-canvas');\n        percentageEl = $('#vp-percentage');\n        canvasCtx = canvasEl.getContext(\"2d\");\n    }\n\n    detectOldPhones();\n\n    createHTML();\n\n    resizeVideo(options.defaultDimension);\n\n    if (options.autoplay) {\n        isVideoTryingToPlay = true;\n    } else {\n        isVideoTryingToPlay = false;\n    }\n\n    loadVideo();\n\n    noInternetTimeout = setTimeout(function () {\n        if (playingPos === 0 && totalLoaded === 0) {\n            percentageEl.innerText = 'no internet';\n            percentageEl.className = 'vp-hidden spinner';\n        }\n    }, 8000);\n\n    var setCorrectingInterval = function setCorrectingInterval(func) {\n        var id = autoIncrement++,\n            planned = Date.now() - fpi;\n        var o = planned,\n            x;\n\n        function tick() {\n            func();\n            if (intervals[id] !== undefined) {\n                planned += fpi;\n                x = Date.now();\n                var delta = planned - x;\n                if (delta < 0) {\n                    /* @NOTE  disable to fix invalid current time when tab inactive - NJ */\n                    //playingPos -= Math.round(delta / fpi);\n                    delta = 0;\n                    if (playingPos >= videoLength) {\n\n                        /* Video Stops and not restart, fire end event - NJ */\n                        if (!isLoop) {\n                            canvasEl.dispatchEvent(endEvent);\n                        }\n                        restart();\n                        return;\n                    }\n                }\n                /* @NOTE time change from delta to origFpi to fix invalid current time when tab inactive - NJ */\n                intervals[id] = setTimeout(tick, origFpi);\n            }\n        }\n\n        intervals[id] = setTimeout(tick, 0);\n        return id;\n    };\n\n    canvasEl.play = this.play;\n    canvasEl.pause = this.pause;\n    canvasEl.replay = this.replay;\n    canvasEl.duration = Math.floor(duration);\n    canvasEl.updateImagesUrl = this.updateImagesUrl;\n\n    return canvasEl;\n};\n\nexports.default = Mobile;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _madsCustom = __webpack_require__(1);\n\nvar _madsCustom2 = _interopRequireDefault(_madsCustom);\n\n__webpack_require__(2);\n\nvar _video = __webpack_require__(0);\n\nvar _video2 = _interopRequireDefault(_video);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */\n\n\nvar AdUnit = function (_Mads) {\n    _inherits(AdUnit, _Mads);\n\n    function AdUnit() {\n        _classCallCheck(this, AdUnit);\n\n        var _this2 = _possibleConstructorReturn(this, (AdUnit.__proto__ || Object.getPrototypeOf(AdUnit)).call(this));\n\n        var _this = _this2;\n\n        return _this2;\n    }\n\n    _createClass(AdUnit, [{\n        key: \'render\',\n        value: function render() {\n            // console.log(\'data\', this.data);\n\n            // this.custTracker = [\'http://www.tracker.com?type={{rmatype}}&tt={{rmatt}}\'];\n\n            // this.tracker(\'CTR\', \'test\');\n\n            // this.linkOpener(\'http://www.google.com\');\n\n            return \'\\n        <div class="container">\\n            <div id="orientation">\\n                <img src="\' + this.data.orientation + \'"/>\\n            </div>\\n            <div class="video">\\n                <div id="ff_layer_0"><div id="video-container-1" class="video-container" style="height: \' + this.data.height + \'px; width: \' + this.data.width + \'px">\\n                    <a id="hosted-video-clickable-area-1" href="#" class="hosted-video-clickable-area"></a>\\n                    <div id="default-control-audio-container-1" class="default-control-audio-container">\\n                        <img src="//cdn.richmediaads.com/html5/images/media/video/mute-v3.png" class="dc-unmute " style="display:none;">   \\n                        <img src="//cdn.richmediaads.com/html5/images/media/video/unmute-v3.png" class="dc-mute" style="display: block;">\\n                    </div>\\n                    <div id="default-control-play-container-1" class="default-control-play-container">\\n                        <img src="//cdn.richmediaads.com/html5/images/media/video/play-v3.png" class="dc-play" style="display: block;">              \\n                        <img src="//cdn.richmediaads.com/html5/images/media/video/pause-v3.png" class="dc-pause">\\n                    </div>\\n                    <div id="default-control-replay-container-1" class="default-control-replay-container">\\n                        <img src="//cdn.richmediaads.com/html5/images/media/video/replay-v3.png" class="dc-replay">\\n                        <span></span>\\n                    </div>\\n                    <video id="video" width="\' + this.data.width + \'" height="\' + this.data.height + \'" muted=""></video>\\n                </div></div>\\n            </div>\\n            <div class="icons">\\n\\n                <div class="first icon slide-in-fwd-center">\\n                    <div class="line"></div>\\n                    <img src="\' + this.data.icon_one + \'" class="click_popup jello-horizontal" target="one"/>\\n                </div>\\n                \\n                <div class="second icon slide-in-fwd-center">\\n                    <div class="line"></div>\\n                    <img src="\' + this.data.icon_two + \'" class="click_popup jello-horizontal" target="two"/>\\n                </div>\\n                \\n                <div class="third icon slide-in-fwd-center">\\n                    <div class="line"></div>\\n                    <img src="\' + this.data.icon_three + \'" class="click_popup jello-horizontal" target="three"/>\\n                </div>\\n                \\n                <div class="forth icon slide-in-fwd-center">\\n                    <div class="line"></div>\\n                    <img src="\' + this.data.icon_four + \'" class="click_popup jello-horizontal" target="four"/>\\n                </div>\\n                <img src="\' + this.data.banner_one + \'" id="ending-image"/>\\n            </div>\\n            <div class="popup">\\n                <img src="\' + this.data.banner_one + \'" class="banner one"/>\\n                <img src="\' + this.data.banner_two + \'" class="banner two"/>\\n                <img src="\' + this.data.banner_three + \'" class="banner three"/>\\n                <img src="\' + this.data.banner_four + \'" class="banner four"/>\\n\\n                <div class="close fade-in">Resume Video</div>\\n            </div>\\n        </div>\\n    \';\n        }\n    }, {\n        key: \'style\',\n        value: function style() {\n            var links = [];\n\n            return [].concat(links, [\'\\n      body {\\n      }\\n      \']);\n        }\n    }, {\n        key: \'events\',\n        value: function events() {\n            var _this3 = this;\n\n            this.orientation = document.getElementById(\'orientation\');\n            this.video = document.querySelector(\'.video\');\n            this.icons = document.querySelector(\'.icons\');\n\n            if (this.data.showOrientation) {\n                setTimeout(function () {\n                    _this3.orientation.style.display = \'none\';\n                }, 2000);\n\n                setTimeout(function () {\n                    _this3.video.style.display = \'block\';\n                    _this3.icons.style.display = \'block\';\n                    _this3.loadDelay();\n                }, 1000);\n            } else {\n                this.orientation.style.display = \'none\';\n                this.video.style.display = \'block\';\n                this.icons.style.display = \'block\';\n                this.loadDelay();\n            }\n        }\n    }, {\n        key: \'loadDelay\',\n        value: function loadDelay() {\n            var _this4 = this;\n\n            var param = { "w": 480, "h": 320, "fps": 10, "frames": 204, "length": 20.417, "src": { "mp4": "https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.mp4", "webm": "https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.webm", "ogg": "https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.ogg", "img_url": "https://rmarepo.richmediaads.com/2594/images/autoplay/j8okn/image_", "audio_url": "https://rmarepo.richmediaads.com/2594/images/autoplay/j8okn/audio.mp3", "file": "https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.mp4", "size": 0 }, "coverImage": { "src": "", "action": 0, "lpUrl": "" }, "endingImage": { "src": "", "action": 0, "lpUrl": "" }, "control": 1, "autoplay": "1", "clickthrough": { "txt": "Click Here", "lpUrl": "" }, "extTrackers": { "ytPlay": "", "enabled": true } };\n            // var param = {"w":336,"h":280,"fps":10,"frames":204,"length":20.417,"src":{"mp4":"https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.mp4","webm":"https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.webm","ogg":"https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.ogg","img_url":"https://rmarepo.richmediaads.com/2594/images/autoplay/2e48w1u/image_","audio_url":"https://rmarepo.richmediaads.com/2594/images/autoplay/2e48w1u/audio.mp3","file":"https://rmarepo.richmediaads.com/2594/videos/iLotte_Video_20s.mp4","size":0},"coverImage":{"src":"","action":0,"lpUrl":""},"endingImage":{"src":"","action":0,"lpUrl":""},"control":1,"autoplay":"1","clickthrough":{"txt":"Click Here","lpUrl":""},"extTrackers":{"ytPlay":"","enabled":true}};\n\n            this.endImage = document.getElementById(\'ending-image\');\n            this.ended = false;\n            this.video = new _video2.default({\n                app: this,\n                selector: \'#ff_hostedvideo_1\',\n                data: param,\n                layer: 0,\n                id: 1,\n                preview: this.preview,\n                animationDelay: 0, //temporary - check used in video js\n                animation: true,\n                replay: false,\n                quality: \'mid\', // hd, low, mid, empty for original, default is low\n                events: {\n                    onPlaying: function onPlaying(time) {\n                        if (time >= 1) {\n                            document.querySelector(\'.first.icon\').style.display = \'block\';\n                        }\n\n                        if (time >= 1.5) {\n                            document.querySelector(\'.second.icon\').style.display = \'block\';\n                        }\n\n                        if (time >= 2.5) {\n                            document.querySelector(\'.third.icon\').style.display = \'block\';\n                        }\n\n                        if (time >= 3.5) {\n                            document.querySelector(\'.forth.icon\').style.display = \'block\';\n                        }\n                    },\n                    onEnded: function onEnded() {\n                        _this4.endImage.style.display = \'block\';\n                        _this4.ended = true;\n                    }\n                }\n            });\n\n            this.endImage.addEventListener(\'click\', function () {\n                _this4.linkOpener(_this4.data.clickthrough_one);\n                _this4.tracker(\'CTR\', \'endimg_clickthrough\');\n            });\n\n            var popup = document.querySelector(\'.popup\');\n            var banner = {\n                one: document.querySelector(\'.banner.one\'),\n                two: document.querySelector(\'.banner.two\'),\n                three: document.querySelector(\'.banner.three\'),\n                four: document.querySelector(\'.banner.four\')\n            };\n\n            var click_popup = document.querySelectorAll(".click_popup");\n            var close = document.querySelector(".close");\n\n            click_popup.forEach(function (click) {\n\n                click.addEventListener(\'click\', function (e) {\n\n                    var target = e.target.getAttribute(\'target\');\n\n                    _this4.tracker(\'E\', \'popup_\' + target);\n\n                    popup.style.display = \'block\';\n                    banner[target].style.display = \'block\';\n                    _this4.video.pauseVideo();\n\n                    popup.classList.add(\'slide-in-bottom\');\n                    popup.classList.remove(\'slide-out-bottom\');\n                });\n            });\n\n            close.addEventListener(\'click\', function (e) {\n\n                // popup.style.display = \'none\'\n                popup.classList.remove(\'slide-in-bottom\');\n                popup.classList.add(\'slide-out-bottom\');\n\n                setTimeout(function () {\n                    banner.one.style.display = \'none\';\n                    banner.two.style.display = \'none\';\n                    banner.three.style.display = \'none\';\n                    banner.four.style.display = \'none\';\n                }, 500);\n\n                if (!_this4.ended) {\n                    _this4.video.playVideo();\n                }\n            });\n\n            banner.one.addEventListener(\'click\', function () {\n                _this4.linkOpener(_this4.data.clickthrough_one);\n                _this4.tracker(\'CTR\', \'clickthrough_one\');\n            });\n            banner.two.addEventListener(\'click\', function () {\n                _this4.linkOpener(_this4.data.clickthrough_two);\n                _this4.tracker(\'CTR\', \'clickthrough_two\');\n            });\n            banner.three.addEventListener(\'click\', function () {\n                _this4.linkOpener(_this4.data.clickthrough_three);\n                _this4.tracker(\'CTR\', \'clickthrough_three\');\n            });\n            banner.four.addEventListener(\'click\', function () {\n                _this4.linkOpener(_this4.data.clickthrough_four);\n                _this4.tracker(\'CTR\', \'clickthrough_four\');\n            });\n        }\n    }, {\n        key: \'isMobile\',\n        value: function isMobile() {\n            if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }, {\n        key: \'listen\',\n        value: function listen(options) {\n            var receiveMessage = function receiveMessage(event) {\n                // console.log(\'receiveMessage\')\n                // console.log(event)\n                options.callback(event.data);\n            };\n            window.addEventListener("message", receiveMessage, false);\n        }\n    }]);\n\n    return AdUnit;\n}(_madsCustom2.default);\n\nwindow.ad = new AdUnit();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(6)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".video-container{position:relative;background:#000}.video-container-background{width:100%;height:100%;background:#000;opacity:.7}.cover-image,.ending-image,.video-container-background,.video-container video{position:absolute;top:0;left:0}.cover-image,.ending-image{z-index:10}.clickthrough-container{position:absolute;cursor:pointer;width:100%;height:100%;top:0;left:0;z-index:8}.clickthrough-container img{width:25px;margin-bottom:-7px}.control-replay{right:0}.control-replay,.control-replay img{position:absolute;top:0;width:32px;height:32px}.control-replay img{display:none;left:0;z-index:11}.special-control{position:absolute;top:50%;left:50%;width:32px;height:32px;margin-left:-16px;margin-top:-16px}.default-control-audio-container img,.default-control-play-container img,.special-control img{top:0;z-index:9;display:none;position:absolute}.special-control img{width:32px;height:32px;left:0}.default-control-play-container{width:32px;height:32px;position:absolute;bottom:5px;left:50%;margin-left:-9px;z-index:9}.default-control-bar-container{width:100%;height:65px;background:url(https://cdn.serving1.net/html5/images/media/video/rectangle.png) repeat-x;position:absolute;bottom:0;left:0;background-size:100%;z-index:9}.default-control-play-container img.dc-pause,.default-control-play-container img.dc-play{width:32px;height:32px;left:0}.default-control-audio-container{width:32px;height:32px;position:absolute;bottom:5px;left:50%;margin-left:40px;z-index:9}.default-control-audio-container img.dc-mute,.default-control-audio-container img.dc-unmute{width:32px;height:32px;left:0}.default-control-replay-container{width:32px;height:32px;position:absolute;bottom:5px;left:50%;margin-left:-60px;z-index:11}.default-control-replay-container span{background:url(https://cdn.richmediaads.com/html5/images/media/video/time.png);padding:7px 0;border-radius:50px;color:#fff;position:absolute;font-size:16px;font-family:arial;width:32px;height:18px;text-align:center}.default-control-replay-container img{width:32px;height:32px;display:none;position:absolute;top:0;left:0;z-index:11}.default-control-replay-container svg{width:32px;height:32px;position:absolute;top:0;left:0;z-index:9}svg{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.circle_animation{stroke-dasharray:88;stroke-dashoffset:88;-webkit-transition:all 1s linear;transition:all 1s linear}#adBased .video-container{pointer-events:none}#default-control-play-container-1,#default-control-replay-container-1{display:none}#default-control-audio-container-1{right:10px;left:auto}.container{width:480px;height:320px;position:relative;overflow:hidden}.video{display:none}.line{border-left:3px solid #fff;height:60%;left:50%;margin-left:-3px}.icons,.line{bottom:0;position:absolute}.icons{width:100%;height:100%;display:none}.icons .click_popup{cursor:pointer;width:52px;height:40px;background:hsla(0,0%,100%,.5)}.icons .icon{position:absolute;width:50px;height:75px;bottom:0;left:10%;text-align:center;display:none}.icons .first{height:75px;left:13%}.icons .first .line{height:39px}.icons .second{height:90px;left:33%}.icons .second .line{height:54px}.icons .third{height:105px;left:55%}.icons .third .line{height:69px}.icons .forth{height:90px;left:80%}.icons .forth .line{height:54px}.popup{z-index:999}.banner,.popup{position:absolute;top:0;left:0;display:none}.banner{width:480px;height:320px;cursor:pointer}.close{z-index:199999;top:285px;color:#fff;background:rgba(0,0,0,.5);text-align:center;padding:5px 10px;border-radius:10px;left:330px;width:125px}#ending-image,.close{position:absolute;cursor:pointer;-webkit-animation:fade-in 1.2s cubic-bezier(.39,.575,.565,1) both;animation:fade-in 1.2s cubic-bezier(.39,.575,.565,1) both}#ending-image{display:none;width:480px;height:320px;top:0;left:0}.slide-in-fwd-center{-webkit-animation:slide-in-fwd-center .4s cubic-bezier(.25,.46,.45,.94) both;animation:slide-in-fwd-center .4s cubic-bezier(.25,.46,.45,.94) both}.jello-horizontal{-webkit-animation:jello-horizontal 5s infinite;animation:jello-horizontal 5s infinite}.slide-in-bottom{-webkit-animation:slide-in-bottom .5s cubic-bezier(.25,.46,.45,.94) both;animation:slide-in-bottom .5s cubic-bezier(.25,.46,.45,.94) both}.slide-out-bottom{-webkit-animation:slide-out-bottom .5s cubic-bezier(.55,.085,.68,.53) both;animation:slide-out-bottom .5s cubic-bezier(.55,.085,.68,.53) both}.fade-in{-webkit-animation:fade-in 1.2s cubic-bezier(.39,.575,.565,1) both;animation:fade-in 1.2s cubic-bezier(.39,.575,.565,1) both;-webkit-animation-delay:.5s;animation-delay:.5s}@-webkit-keyframes slide-in-fwd-center{0%{-webkit-transform:translateZ(-1400px);transform:translateZ(-1400px);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes slide-in-fwd-center{0%{-webkit-transform:translateZ(-1400px);transform:translateZ(-1400px);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}. @-webkit-keyframes jello-horizontal{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}15%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}20%{-webkit-transform:scale3d(.75,1.25,1);transform:scale3d(.75,1.25,1)}25%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}32%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}37%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}50%,to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes jello-horizontal{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}15%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}20%{-webkit-transform:scale3d(.75,1.25,1);transform:scale3d(.75,1.25,1)}25%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}32%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}37%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}50%{-webkit-transform:scaleX(1);transform:scaleX(1)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes jello-horizontal{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}15%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}20%{-webkit-transform:scale3d(.75,1.25,1);transform:scale3d(.75,1.25,1)}25%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}32%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}37%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}50%{-webkit-transform:scaleX(1);transform:scaleX(1)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes slide-in-bottom{0%{-webkit-transform:translateY(1000px);transform:translateY(1000px);opacity:0}to{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}}@keyframes slide-in-bottom{0%{-webkit-transform:translateY(1000px);transform:translateY(1000px);opacity:0}to{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}}@-webkit-keyframes slide-out-bottom{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}to{-webkit-transform:translateY(1000px);transform:translateY(1000px);opacity:0}}@keyframes slide-out-bottom{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}to{-webkit-transform:translateY(1000px);transform:translateY(1000px);opacity:0}}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/ZGEwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(10);\n\nvar constants = {\n  json: (0, _utils.getParameterByName)('json'),\n  custTracker: (0, _utils.getParameterByName)('custTracker'),\n  fet: (0, _utils.getParameterByName)('fet'),\n  ct: (0, _utils.getParameterByName)('ct'),\n  cte: (0, _utils.getParameterByName)('cte'),\n  tags: (0, _utils.getParameterByName)('tags'),\n  pgId: (0, _utils.getParameterByName)('pgId'),\n  preview: (0, _utils.getParameterByName)('preview'),\n  md5: (0, _utils.getParameterByName)('md5')\n};\n\nexports.default = constants;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbWFkcy1jdXN0b20vbGliL2NvbnN0YW50cy5qcz84NzgwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIGNvbnN0YW50cyA9IHtcbiAganNvbjogKDAsIF91dGlscy5nZXRQYXJhbWV0ZXJCeU5hbWUpKCdqc29uJyksXG4gIGN1c3RUcmFja2VyOiAoMCwgX3V0aWxzLmdldFBhcmFtZXRlckJ5TmFtZSkoJ2N1c3RUcmFja2VyJyksXG4gIGZldDogKDAsIF91dGlscy5nZXRQYXJhbWV0ZXJCeU5hbWUpKCdmZXQnKSxcbiAgY3Q6ICgwLCBfdXRpbHMuZ2V0UGFyYW1ldGVyQnlOYW1lKSgnY3QnKSxcbiAgY3RlOiAoMCwgX3V0aWxzLmdldFBhcmFtZXRlckJ5TmFtZSkoJ2N0ZScpLFxuICB0YWdzOiAoMCwgX3V0aWxzLmdldFBhcmFtZXRlckJ5TmFtZSkoJ3RhZ3MnKSxcbiAgcGdJZDogKDAsIF91dGlscy5nZXRQYXJhbWV0ZXJCeU5hbWUpKCdwZ0lkJyksXG4gIHByZXZpZXc6ICgwLCBfdXRpbHMuZ2V0UGFyYW1ldGVyQnlOYW1lKSgncHJldmlldycpLFxuICBtZDU6ICgwLCBfdXRpbHMuZ2V0UGFyYW1ldGVyQnlOYW1lKSgnbWQ1Jylcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGNvbnN0YW50cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbWFkcy1jdXN0b20vbGliL2NvbnN0YW50cy5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* global window, requestAnimationFrame */\n\nvar fadeIn = function fadeIn(el, display) {\n  var tmpEl = el;\n  var opacity = 0;\n\n  tmpEl.style.display = display || window.getComputedStyle(tmpEl, null).getPropertyValue('display') || 'block';\n  tmpEl.style.opacity = 0;\n  tmpEl.style.filter = '';\n\n  var last = +new Date();\n  var anim = void 0;\n  var tick = function tick() {\n    opacity += (new Date() - last) / 400;\n    tmpEl.style.opacity = opacity;\n    tmpEl.style.filter = 'alpha(opacity=' + (100 * opacity | 0) + ')'; // eslint-disable-line no-bitwise\n\n    last = +new Date();\n\n    if (opacity < 1) {\n      // eslint-disable-next-line no-unused-expressions\n      anim = window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n    } else {\n      window.cancelAnimationFrame && cancelAnimationFrame(anim) || clearTimeout(anim);\n      tmpEl.style.display = display || window.getComputedStyle(tmpEl, null).getPropertyValue('display') || 'block';\n    }\n  };\n\n  tick();\n};\n\nvar fadeOut = function fadeOut(el) {\n  var tmpEl = el;\n  var opacity = 1;\n\n  tmpEl.style.opacity = 1;\n  tmpEl.style.filter = 'alpha(opacity=' + (100 * opacity | 1) + ')'; // eslint-disable-line no-bitwise\n\n  var last = +new Date();\n  var anim = void 0;\n  var tick = function tick() {\n    opacity -= (new Date() - last) / 400;\n    tmpEl.style.opacity = opacity;\n    tmpEl.style.filter = 'alpha(opacity=' + (100 * opacity | 0) + ')'; // eslint-disable-line no-bitwise\n\n    last = +new Date();\n\n    if (opacity <= 0) {\n      window.cancelAnimationFrame && cancelAnimationFrame(anim) || clearTimeout(anim);\n      tmpEl.style.display = 'none';\n    } else {\n      // eslint-disable-next-line no-unused-expressions\n      anim = window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n    }\n  };\n\n  tick();\n};\n\nvar fadeOutIn = function fadeOutIn(elOut, elIn, opts) {\n  fadeOut(elOut);\n  fadeIn(elIn, opts.display);\n};\n\nexports.default = null;\nexports.fadeIn = fadeIn;\nexports.fadeOut = fadeOut;\nexports.fadeOutIn = fadeOutIn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbWFkcy1jdXN0b20vbGliL2VmZmVjdHMuanM/MzRiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG4vKiBnbG9iYWwgd2luZG93LCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKi9cblxudmFyIGZhZGVJbiA9IGZ1bmN0aW9uIGZhZGVJbihlbCwgZGlzcGxheSkge1xuICB2YXIgdG1wRWwgPSBlbDtcbiAgdmFyIG9wYWNpdHkgPSAwO1xuXG4gIHRtcEVsLnN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5IHx8IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRtcEVsLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKCdkaXNwbGF5JykgfHwgJ2Jsb2NrJztcbiAgdG1wRWwuc3R5bGUub3BhY2l0eSA9IDA7XG4gIHRtcEVsLnN0eWxlLmZpbHRlciA9ICcnO1xuXG4gIHZhciBsYXN0ID0gK25ldyBEYXRlKCk7XG4gIHZhciBhbmltID0gdm9pZCAwO1xuICB2YXIgdGljayA9IGZ1bmN0aW9uIHRpY2soKSB7XG4gICAgb3BhY2l0eSArPSAobmV3IERhdGUoKSAtIGxhc3QpIC8gNDAwO1xuICAgIHRtcEVsLnN0eWxlLm9wYWNpdHkgPSBvcGFjaXR5O1xuICAgIHRtcEVsLnN0eWxlLmZpbHRlciA9ICdhbHBoYShvcGFjaXR5PScgKyAoMTAwICogb3BhY2l0eSB8IDApICsgJyknOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWJpdHdpc2VcblxuICAgIGxhc3QgPSArbmV3IERhdGUoKTtcblxuICAgIGlmIChvcGFjaXR5IDwgMSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuICAgICAgYW5pbSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgJiYgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRpY2spIHx8IHNldFRpbWVvdXQodGljaywgMTYpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgJiYgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbSkgfHwgY2xlYXJUaW1lb3V0KGFuaW0pO1xuICAgICAgdG1wRWwuc3R5bGUuZGlzcGxheSA9IGRpc3BsYXkgfHwgd2luZG93LmdldENvbXB1dGVkU3R5bGUodG1wRWwsIG51bGwpLmdldFByb3BlcnR5VmFsdWUoJ2Rpc3BsYXknKSB8fCAnYmxvY2snO1xuICAgIH1cbiAgfTtcblxuICB0aWNrKCk7XG59O1xuXG52YXIgZmFkZU91dCA9IGZ1bmN0aW9uIGZhZGVPdXQoZWwpIHtcbiAgdmFyIHRtcEVsID0gZWw7XG4gIHZhciBvcGFjaXR5ID0gMTtcblxuICB0bXBFbC5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgdG1wRWwuc3R5bGUuZmlsdGVyID0gJ2FscGhhKG9wYWNpdHk9JyArICgxMDAgKiBvcGFjaXR5IHwgMSkgKyAnKSc7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYml0d2lzZVxuXG4gIHZhciBsYXN0ID0gK25ldyBEYXRlKCk7XG4gIHZhciBhbmltID0gdm9pZCAwO1xuICB2YXIgdGljayA9IGZ1bmN0aW9uIHRpY2soKSB7XG4gICAgb3BhY2l0eSAtPSAobmV3IERhdGUoKSAtIGxhc3QpIC8gNDAwO1xuICAgIHRtcEVsLnN0eWxlLm9wYWNpdHkgPSBvcGFjaXR5O1xuICAgIHRtcEVsLnN0eWxlLmZpbHRlciA9ICdhbHBoYShvcGFjaXR5PScgKyAoMTAwICogb3BhY2l0eSB8IDApICsgJyknOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWJpdHdpc2VcblxuICAgIGxhc3QgPSArbmV3IERhdGUoKTtcblxuICAgIGlmIChvcGFjaXR5IDw9IDApIHtcbiAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSAmJiBjYW5jZWxBbmltYXRpb25GcmFtZShhbmltKSB8fCBjbGVhclRpbWVvdXQoYW5pbSk7XG4gICAgICB0bXBFbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG4gICAgICBhbmltID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSAmJiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGljaykgfHwgc2V0VGltZW91dCh0aWNrLCAxNik7XG4gICAgfVxuICB9O1xuXG4gIHRpY2soKTtcbn07XG5cbnZhciBmYWRlT3V0SW4gPSBmdW5jdGlvbiBmYWRlT3V0SW4oZWxPdXQsIGVsSW4sIG9wdHMpIHtcbiAgZmFkZU91dChlbE91dCk7XG4gIGZhZGVJbihlbEluLCBvcHRzLmRpc3BsYXkpO1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gbnVsbDtcbmV4cG9ydHMuZmFkZUluID0gZmFkZUluO1xuZXhwb3J0cy5mYWRlT3V0ID0gZmFkZU91dDtcbmV4cG9ydHMuZmFkZU91dEluID0gZmFkZU91dEluO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYWRzLWN1c3RvbS9saWIvZWZmZWN0cy5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* global document window XMLHttpRequest MutationObserver mraid */\n\n\nvar _constants = __webpack_require__(7);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Mads = function () {\n  function Mads() {\n    var _this = this;\n\n    _classCallCheck(this, Mads);\n\n    this.body = document.getElementsByTagName('body')[0];\n    this.head = document.getElementsByTagName('head')[0];\n\n    this.googleApiKey = 'AIzaSyCFHn5MNIYN-lGyTDTUYRAJM2fEKvHm-nE';\n\n    this.path = typeof window.rma !== 'undefined' ? window.rma.customize.src || '' : '';\n\n    // Get JSON value\n    if (!_constants2.default.json && window.rma && window.rma.customize && window.rma.customize.json && Object.keys(window.rma.customize.json).length !== 0) {\n      this.json = window.rma.customize.json;\n    } else if (_constants2.default.json && Object.keys(_constants2.default.json).length !== 0) {\n      this.json = _constants2.default.json;\n    } else {\n      this.json = this.resolve('./data.json');\n    }\n\n    // Setup & get FET value\n    this.fetTracked = false;\n    if (!_constants2.default.fet && window.rma) {\n      this.fet = typeof window.rma.fet === 'string' ? [window.rma.fet] : window.rma.fet;\n    } else if (_constants2.default.fet) {\n      this.fet = typeof _constants2.default.fet === 'string' ? [_constants2.default.fet] : _constants2.default.fet;\n    } else {\n      this.fet = [];\n    }\n\n    if (!_constants2.default.custTracker && window.rma) {\n      this.custTracker = window.rma.customize.custTracker;\n    } else if (_constants2.default.custTracker) {\n      this.custTracker = _constants2.default.custTracker;\n    } else {\n      this.custTracker = [];\n    }\n\n    if (!_constants2.default.ct && window.rma) {\n      this.ct = typeof window.rma.ct === 'string' ? [window.rma.ct] : window.rma.ct;\n    } else if (_constants2.default.ct) {\n      this.ct = typeof _constants2.default.ct === 'string' ? [_constants2.default.ct] : _constants2.default.ct;\n    } else {\n      this.ct = [];\n    }\n\n    if (!_constants2.default.cte && window.rma) {\n      this.cte = typeof window.rma.cte === 'string' ? [window.rma.cte] : window.rma.cte;\n    } else if (_constants2.default.cte) {\n      this.cte = typeof _constants2.default.cte === 'string' ? [_constants2.default.cte] : _constants2.default.cte;\n    } else {\n      this.cte = [];\n    }\n\n    if (_constants2.default.pgId && typeof _constants2.default.pgId !== 'undefined' && _constants2.default.pgId !== 'undefined') {\n      this.pgId = _constants2.default.pgId;\n    } else {\n      var genereatePgId = function genereatePgId(flag) {\n        var r = (Math.random().toString(16) + \"000000000\").substr(2, 8);\n        return flag ? '-' + r.substr(0, 4) + '-' + r.substr(4, 4) : r;\n      };\n\n      this.pgId = '' + genereatePgId() + genereatePgId(true) + genereatePgId(true) + genereatePgId();\n    }\n\n    if (!_constants2.default.tags && window.rma) {\n      this.leadTags = this.leadTagsProcess(window.rma.tags);\n      this.tags = this.processTags(window.rma.tags);\n    } else if (_constants2.default.tags) {\n      this.leadTags = this.leadTagsProcess(_constants2.default.tags);\n      this.tags = this.processTags(_constants2.default.tags);\n    } else {\n      this.leadTags = '';\n      this.tags = '';\n    }\n\n    this.id = this.generateUniqueId();\n    this.tracked = [];\n    this.trackedEngagementType = [];\n    this.engagementTypeExclude = [];\n    this.firstEngagementTracked = false;\n    this.content = document.getElementById('rma-widget');\n\n    for (var i = 0; i < this.custTracker.length; i += 1) {\n      if (this.custTracker[i].indexOf('{2}') !== -1) {\n        this.custTracker[i] = this.custTracker[i].replace('{2}', '{{type}}');\n      }\n    }\n    this.elems = {};\n\n    var loadAdOldSchool = function loadAdOldSchool() {\n      if (typeof _this.json === 'string' && (_this.json.indexOf('./') === 0 || _this.json.indexOf('https://') === 0 || _this.json.indexOf('http://') === 0)) {\n\n        _this.loadJS(_this.json).then(function () {\n          if (json_data) {\n            _this.userId = json_data.userId;\n            _this.studioId = json_data.id;\n            _this.data = json_data;\n            _this.leadData = {\n              leadGenEle: json_data.leadGenEle\n            };\n          }\n          console.log('loaded old with loading json', _this.json, _this.data);\n          _this.loadAd();\n        });\n      } else {\n        if (_constants2.default.json) {\n          _this.userId = _constants2.default.json.userId;\n          _this.studioId = _constants2.default.json.id;\n          _this.data = _constants2.default.json;\n          _this.leadData = {\n            leadGenEle: _constants2.default.json.leadGenEle\n          };\n        }\n        console.log('loaded old with constant json', _constants2.default.json, _this.data);\n        _this.loadAd();\n      }\n    };\n\n    if (_constants2.default.preview) {\n      window.addEventListener('message', function (e) {\n        var props = e.data.data;\n        if (typeof e.data.auth !== 'undefined' && e.data.auth === 'preview') {\n          _this.data = props.data;\n          _this.leadData = props.leadgen;\n          _this.userId = props.userId;\n          _this.studioId = props.studioId;\n          setTimeout(function () {\n            console.log('loaded new with preview json', props, _this.data);\n            _this.loadAd();\n          }, 1);\n        }\n      });\n    } else if (_constants2.default.md5 && _constants2.default.md5 !== 'undefined' && typeof _constants2.default.md5 !== 'undefined') {\n      this.loadJS('https://cdn.richmediaads.com/studio-full/' + _constants2.default.md5 + '.json?pgId' + this.pgId).then(function () {\n        try {\n          _this.userId = data_studiofull.userId;\n          _this.studioId = data_studiofull.id;\n          _this.data = data_studiofull.tab1.componentContent[34].data.raw.property;\n          _this.leadData = data_studiofull.tab1.componentContent[34].data.raw.leadgen;\n          console.log('loaded new with md5 json', data_studiofull, _this.data);\n          _this.loadAd();\n        } catch (e) {\n          loadAdOldSchool();\n        }\n      });\n    } else {\n      loadAdOldSchool();\n    }\n  }\n\n  _createClass(Mads, [{\n    key: 'loadAd',\n    value: function loadAd() {\n      var _this2 = this;\n\n      var obs = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n          if (mutation.target === _this2.content) {\n            _this2.content.querySelectorAll('*').forEach(function (elem) {\n              if (elem.id) {\n                _this2.elems[elem.id] = elem;\n              }\n            });\n            if (_this2.postRender) _this2.postRender();\n            _this2.events();\n            obs.disconnect();\n          }\n        });\n      });\n\n      var config = { childList: true };\n\n      obs.observe(this.content, config);\n\n      this.content.innerHTML = this.render().replace(/src=\"/g, 'src=\"' + this.path);\n\n      var defaultStyles = 'body{padding:0;margin:0;}';\n      this.loadCSS(defaultStyles);\n      var style = this.style();\n      if (typeof style === 'string') {\n        this.loadCSS(style);\n      } else {\n        style.forEach(function (_style) {\n          return _this2.loadCSS(_style);\n        });\n      }\n    }\n  }, {\n    key: 'resolve',\n    value: function resolve(path) {\n      if (this.path) {\n        return this.path + path;\n      }\n      return path;\n    }\n  }, {\n    key: 'generateUniqueId',\n    value: function generateUniqueId() {\n      // eslint-disable-line class-methods-use-this\n      return +new Date();\n    }\n  }, {\n    key: 'processTags',\n    value: function processTags(tags) {\n      var tmpTags = tags || this.tags;\n      var resultTags = '';\n      Object.keys(tmpTags).forEach(function (tag) {\n        if (tmpTags[tag]) {\n          tmpTags[tag] = encodeURIComponent(tmpTags[tag]);\n          resultTags += '&' + tag + '=' + tmpTags[tag];\n        }\n      });\n\n      return resultTags;\n    }\n  }, {\n    key: 'leadTagsProcess',\n    value: function leadTagsProcess(tags) {\n      var tmpTags = '';\n      Object.keys(tags).forEach(function (tag) {\n        if (tags[tag]) {\n          tmpTags += tags[tag] + ',';\n        }\n      });\n      return tmpTags.slice(0, -1);\n    }\n  }, {\n    key: 'linkOpener',\n    value: function linkOpener(url) {\n      var tmpUrl = url;\n      if (typeof tmpUrl !== 'undefined' && tmpUrl !== '') {\n        if (typeof this.ct !== 'undefined' && this.ct !== '' && this.ct.length !== 0) {\n          tmpUrl = this.ct + encodeURIComponent(tmpUrl);\n          this.url = tmpUrl;\n        }\n\n        if (typeof mraid !== 'undefined') {\n          mraid.open(tmpUrl);\n        } else {\n          window.open(tmpUrl);\n        }\n\n        if (typeof this.cte !== 'undefined' && this.cte !== '') {\n          this.imageTracker(this.cte);\n        }\n      }\n    }\n  }, {\n    key: 'tracker',\n    value: function tracker(tt, type, name, value) {\n      var _this3 = this;\n\n      var tmpName = type.name || name || type;\n      var tmpValue = value;\n\n      if (tt === 'E' && !this.fetTracked && this.fet) {\n        for (var i = 0; i < this.fet.length; i += 1) {\n          var t = document.createElement('img');\n          t.src = decodeURIComponent(this.fet[i]);\n\n          t.style.display = 'none';\n          this.body.appendChild(t);\n        }\n        this.fetTracked = true;\n      }\n\n      if (typeof this.custTracker !== 'undefined' && this.custTracker !== '' && this.tracked.indexOf(tmpName) === -1) {\n        for (var _i = 0; _i < this.custTracker.length; _i += 1) {\n          if (_i !== 0 && type.exclude) continue;\n          var img = document.createElement('img');\n\n          if (typeof tmpValue === 'undefined') {\n            tmpValue = '';\n          }\n\n          var src = this.custTracker[_i].replace('{{rmatype}}', type.name || type);\n          src = src.replace('{{rmavalue}}', tmpValue);\n\n          if (this.trackedEngagementType.indexOf(tt) !== -1\n            || this.engagementTypeExclude.indexOf(tt) !== -1 || tt == '') {\n            src = src.replace('tt={{rmatt}}', '');\n          } else {\n            src = src.replace('{{rmatt}}', tt);\n            this.trackedEngagementType.push(tt);\n          }\n\n          if (!this.firstEngagementTracked && tt === 'E' && type !== 'tilt_landscape') {\n            src += '&ty=E';\n            this.firstEngagementTracked = true;\n          }\n\n          if (type == 'yt_play' || type == 'video_play') {\n            src += '&tv=VP'\n          } else if (type == 'yt_play_100' || type == 'video_play_100') {\n            src += '&tv=VC'\n          }\n\n          var tags = Object.keys(this.tags).map(function (key) {\n            return _this3.tags[key];\n          });\n\n          img.src = src + this.tags + '&' + this.id;\n\n          img.style.display = 'none';\n          this.body.appendChild(img);\n\n          this.tracked.push(tmpName);\n        }\n      }\n    }\n  }, {\n    key: 'imageTracker',\n    value: function imageTracker(url) {\n      for (var i = 0; i < url.length; i += 1) {\n        var t = document.createElement('img');\n        t.src = url[i];\n\n        t.style.display = 'none';\n        this.body.appendChild(t);\n      }\n    }\n  }, {\n    key: 'loadJS',\n    value: function loadJS(url) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var script = document.createElement('script');\n          script.src = url;\n          _this4.head.appendChild(script);\n          script.onload = function () {\n            resolve(true);\n          };\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }, {\n    key: 'generateShortUrl',\n    value: function generateShortUrl(url) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this5.shortUrl) {\n          resolve(JSON.stringify({ id: _this5.shortUrl }));\n        } else {\n          try {\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', 'https://www.googleapis.com/urlshortener/v1/url?key=' + _this5.googleApiKey);\n            xhr.setRequestHeader('content-type', 'application/json');\n            xhr.onreadystatechange = function () {\n              if (xhr.readyState === 4 && xhr.status === 200) {\n                resolve(xhr.responseText);\n              }\n            };\n            xhr.send(JSON.stringify({ longUrl: url }));\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'loadCSS',\n    value: function loadCSS(url) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          if (url.indexOf('http') === 0) {\n            var link = document.createElement('link');\n            link.href = url;\n            link.setAttribute('type', 'text/css');\n            link.setAttribute('rel', 'stylesheet');\n            _this6.head.appendChild(link);\n          } else {\n            var cssText = url.replace(/(<br>)|(\\n)|(      )/gm, '');\n            var style = document.createElement('style');\n            style.innerText = cssText;\n            _this6.head.appendChild(style);\n          }\n\n          resolve(true);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n  }]);\n\n  return Mads;\n}();\n\nexports.default = Mads;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* global window */\n\nvar getParameterByName = function getParameterByName(name, url) {\n  var tmpUrl = url;\n  var tmpName = name;\n  if (!tmpUrl) tmpUrl = window.location.href;\n  tmpName = tmpName.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + tmpName + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(tmpUrl);\n  if (!results) return null;\n  if (!results[2]) return '';\n  try {\n    return JSON.parse(decodeURIComponent(results[2].replace(/\\+/g, ' ')));\n  } catch (e) {\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n};\n\nexports.default = null;\nexports.getParameterByName = getParameterByName;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hZHMtY3VzdG9tL2xpYi91dGlscy5qcz8yODcyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbi8qIGdsb2JhbCB3aW5kb3cgKi9cblxudmFyIGdldFBhcmFtZXRlckJ5TmFtZSA9IGZ1bmN0aW9uIGdldFBhcmFtZXRlckJ5TmFtZShuYW1lLCB1cmwpIHtcbiAgdmFyIHRtcFVybCA9IHVybDtcbiAgdmFyIHRtcE5hbWUgPSBuYW1lO1xuICBpZiAoIXRtcFVybCkgdG1wVXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHRtcE5hbWUgPSB0bXBOYW1lLnJlcGxhY2UoL1tbXFxdXS9nLCAnXFxcXCQmJyk7XG4gIHZhciByZWdleCA9IG5ldyBSZWdFeHAoJ1s/Jl0nICsgdG1wTmFtZSArICcoPShbXiYjXSopfCZ8I3wkKScpO1xuICB2YXIgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModG1wVXJsKTtcbiAgaWYgKCFyZXN1bHRzKSByZXR1cm4gbnVsbDtcbiAgaWYgKCFyZXN1bHRzWzJdKSByZXR1cm4gJyc7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KHJlc3VsdHNbMl0ucmVwbGFjZSgvXFwrL2csICcgJykpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG4gIH1cbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IG51bGw7XG5leHBvcnRzLmdldFBhcmFtZXRlckJ5TmFtZSA9IGdldFBhcmFtZXRlckJ5TmFtZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbWFkcy1jdXN0b20vbGliL3V0aWxzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === "undefined") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(12);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\toptions.attrs.type = "text/css";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\toptions.attrs.type = "text/css";\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0eWxlLWxvYWRlci9saWIvdXJscy5qcz85YzMxIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0eWxlLWxvYWRlci9saWIvdXJscy5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n')}]);